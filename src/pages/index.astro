---
const user = Astro.locals.user;
if (!user) {
  return Astro.redirect("/login");
}

const username = user.username;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1>Welcome {username}!</h1>
    <form method="post" action="/api/logout">
      <button class="underline">Sign out</button>
    </form>
    <div id="chart"></div>
  </body>
</html>

<script>
  import * as d3 from "d3";
  import pizzaData from "../data/pizza.json";

  const container = document.querySelector("#chart");

  const width = 640;
  const height = 400;
  const marginTop = 20;
  const marginRight = 20;
  const marginBottom = 48;
  const marginLeft = 48;

  const x = d3
    .scaleBand()
    .domain(pizzaData.map((d) => d.day_of_week))
    .range([marginLeft, width - marginRight])
    .padding(0.1);

  // Declare the y (vertical position) scale.
  const y = d3
    .scaleLinear()
    .domain([0, d3.max(pizzaData, (d) => d.orders)!])
    .range([height - marginBottom, marginTop]);

  // Create the SVG container.
  const svg = d3
    .create("svg")
    .attr("viewBox", `0 0 ${width} ${height}`)
    .attr("class", "w-full");

  svg
    .append("g")
    .attr("fill", "steelblue")
    .selectAll()
    .data(pizzaData)
    .join("rect")
    .attr("x", (d) => x(d.day_of_week)!)
    .attr("y", (d) => y(d.orders))
    .attr("height", (d) => y(0) - y(d.orders))
    .attr("width", x.bandwidth());

  // Add the x-axis.
  svg
    .append("g")
    .attr("transform", `translate(0,${height - marginBottom})`)
    .call(d3.axisBottom(x))
    .call((g) =>
      g
        .append("text")
        .attr("x", "50%")
        .attr("y", marginBottom - 8)
        .attr("fill", "currentColor")
        .attr("text-anchor", "center")
        .text("Days of the Week"),
    );

  // Add the y-axis.
  svg
    .append("g")
    .attr("transform", `translate(${marginLeft},0)`)
    .call(d3.axisLeft(y))
    .call((g) =>
      g
        .append("text")
        .attr("text-anchor", "middle")
        .attr("transform", "rotate(-90)")
        .attr("fill", "currentColor")
        .attr("text-anchor", "start")
        .text("Orders"),
    );

  container?.append(svg.node() as SVGSVGElement);
</script>
